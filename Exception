package api.exceptions;

public class TestException extends Exception {
	private String type;
	private Integer code;
	private String origin;
	private String category;
	public TestException() {
		super();
	}
	public TestException(String message, Throwable throwable, boolean enableSupression, boolean writableStacktrace) {
		super(message, throwable, enableSupression, writableStacktrace);
	}
	public TestException(TestExceptionEnum testException, String message) {
		super(message);
		this.type = testException.getExceptionType().name();
		this.code = testException.getCode()+testException.getCategory().getCategoryCode();
		this.category = testException.getCategory().name();
		this.origin= testException.getOrigin().name();
	}
	public String getType() {
		return type;
	}
	public void setType(String type) {
		this.type = type;
	}
	public Integer getCode() {
		return code;
	}
	public void setCode(Integer code) {
		this.code = code;
	}
	public String getCategory() {
		return category;
	}
	public void setCategory(String category) {
		this.category = category;
	}
	public String getOrigin() {
		return origin;
	}
	public void setOrigin(String origin) {
		this.origin = origin;
	}
	public TestException(String message, Throwable throwable) {
		super(message, throwable);
	}
	public TestException(String message) {
		super(message);
	}
	public TestException(Throwable throwable) {
		super(throwable);
	}
	public TestException(String type, Integer code, String category, String message, String origin) {
		super(message);
		this.type = type;
		this.code = code;
		this.category = category;
		this.origin= origin;
	}
}
